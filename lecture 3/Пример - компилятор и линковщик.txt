Краткая информация:
http://rus-linux.net/lib.php?name=/MyLDP/algol/compilation/linkers-and-loaders-1.html
http://rus-linux.net/lib.php?name=/MyLDP/algol/compilation/linkers-and-loaders-2.html

Создадим 2 файла:
=== 1.c ===
#include <stdio.h>

int n      = 3,
    result = 0;

int main(){
  //scanf("%d", &n);
  n = 5;
  result = fact(n);
  printf("%d \n",result);
}
=== 2.c ===
int fact(int x){
  if ( x <= 1 ) 
	return 1; 
  else 
	return x*fact(x-1);
}
======

Получить из них исполняемый файл:
gcc 1.c 2.c -o fact

Обращаем внимание, что одного файла не хватает:
команда		gcc 1.c -o fact		выдаст ошибку
/tmp/ccY6yLDj.o: In function `main':
1.c:(.text+0x1c): undefined reference to `fact'
collect2: error: ld returned 1 exit status

А теперь посмотрим по шагам

1. Результат работы препроцессора: gcc -E 1.c 2.c

2. Результат работы компилятора: gcc -S 1.c
   Появится файл 1.s и 2.s
   Версию для 32-бит можно получить командой gcc -S -m32 1.c 2.c
   Версию в нотации ассемблера Intel можно получить командой gcc -S -m32 -masm=intel 1.c 2.c

3. Результат работы ассемблера: as 1.s -o 1.o & as 2.s -o 2.o
   Появятся объектные файлы 1.o и 2.o
   Версию для 32-бит можно получить командой as -32 1.s -o 1.o

Объектный файл - уже бинарный, но ещё не исполняемый, хотя про него можно узнать много интересного

nm 1.o			# посмотреть таблицу символов, man nm подсказывает
			# T - символ в коде
			# U - неопределён
			# B - (BSS) неинициализированные данные
			# D - инициализированные данные

objdump -d 1.o		# дизассемблирование, нумерация байтов - с нуля
objdump -r 1.o		# таблица релокации
objdump -d -r 1.o	# и то и то, обратите внимание, что в адресах незнакомых функций стоит 0

Попробуем собрать программу:
( напомним, мы выполнили gcc -S *.c; as 1.s -o 1.o; as 2.s -o 2.o )
Вызываем линковщик и ld 1.o 2.o получаем ошибку
1.o: In function `main':
1.c:(.text+0x39): undefined reference to `printf'

Нужно указать ld путь к стандартной библиотеке.
Посмотреть, что подставляет компилятор, можно командой gcc -v 1.c 2.c

Линковка может быть статической (gcc -static) или динамической (по умолчанию)
Посмотрите на размеры файлов и результат команды ldd ./fact